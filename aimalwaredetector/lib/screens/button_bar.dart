import 'package:flutter/material.dart';
import 'device_selector_dialog.dart';
import '../services/db_service.dart'; // Import the db_service

class ButtonBarWidget extends StatelessWidget {
  void _scanDevices(BuildContext context) async {
    final List<String>? selectedDevices = await showDialog<List<String>>(
      context: context,
      builder: (BuildContext context) {
        return DeviceSelectorDialog();
      },
    );

    if (selectedDevices != null && selectedDevices.isNotEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(SnackBar(
        content: Text('Obteniendo trafico de la red...'),
      ));

      // Call the loadData method
      final networkDataList = await DatabaseService().loadData();

      if (networkDataList != null && networkDataList.isNotEmpty) {
        // Display the network data one by one
        for (var data in networkDataList) {
          ScaffoldMessenger.of(context).showSnackBar(SnackBar(
            content: Text('Network Data: ${data.someProperty}'),
          ));
          await Future.delayed(Duration(seconds: 2)); // Delay between each item
        }
      } else {
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
          content: Text('No network data found.'),
        ));
      }
    } else {
      ScaffoldMessenger.of(context).showSnackBar(SnackBar(
        content: Text('No devices selected.'),
      ));
    }
  }

  void _detectMalware(BuildContext context) {
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(
      content: Text('Detectando malware...'),
    ));
  }

  void _generateReport(BuildContext context) {
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(
      content: Text('Generando reporte...'),
    ));
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      color: Colors.blueGrey[900],
      padding: EdgeInsets.symmetric(vertical: 10.0),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          ElevatedButton(
            onPressed: () => _scanDevices(context),
            child: Text('Escanear Trafico en la red'),
            style: ElevatedButton.styleFrom(
              padding: EdgeInsets.symmetric(horizontal: 20, vertical: 15),
            ),
          ),
          ElevatedButton(
            onPressed: () => _detectMalware(context),
            child: Text('Detectar Malware'),
            style: ElevatedButton.styleFrom(
              padding: EdgeInsets.symmetric(horizontal: 20, vertical: 15),
            ),
          ),
          ElevatedButton(
            onPressed: () => _generateReport(context),
            child: Text('Generar Reporte'),
            style: ElevatedButton.styleFrom(
              padding: EdgeInsets.symmetric(horizontal: 20, vertical: 15),
            ),
          ),
        ],
      ),
    );
  }
}
