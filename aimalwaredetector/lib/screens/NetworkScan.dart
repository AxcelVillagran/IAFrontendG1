import 'dart:convert';
import 'dart:io';
import 'package:aimalwaredetector/models/network_data.dart';
import 'package:flutter/material.dart';
import 'package:path_provider/path_provider.dart';

class NetworkScanner extends StatefulWidget {
  @override
  _NetworkScannerState createState() => _NetworkScannerState();
}

class _NetworkScannerState extends State<NetworkScanner> {
  List<NetworkData> networkDataList = [];

  Future<void> loadJsonData() async {
    try {
      final directory = await getApplicationDocumentsDirectory();
      final file = File('${directory.path}/captured_data.json');
      String jsonString = await file.readAsString();
      List<dynamic> jsonResponse = json.decode(jsonString);

      setState(() {
        networkDataList = jsonResponse.map((data) => NetworkData.fromJson(data)).toList();
      });
    } catch (e) {
      print("Error loading JSON data: $e");
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Escanear Red'),
      ),
      body: Column(
        children: [
          ElevatedButton(
            onPressed: loadJsonData,
            child: Text('Escanear Red'),
          ),
          Expanded(
            child: ListView.builder(
              itemCount: networkDataList.length + 1,
              itemBuilder: (context, index) {
                if (index == 0) {
                  return ListTile(
                    title: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Text('Source'),
                        Text('Destination'),
                        Text('Protocol'),
                        Text('Timestamp'),
                        Text('Service'),
                        Text('Duration'),
                        Text('Conn State'),
                        Text('History'),
                      ],
                    ),
                  );
                } else {
                  final data = networkDataList[index - 1];
                  return ListTile(
                    title: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Text(data.source),
                        Text(data.destination),
                        Text(data.protocol),
                        Text(data.timestamp.toString()),
                        Text(data.service ?? '-'),
                        Text(data.duration.toString()),
                        Text(data.conn_state),
                        Text(data.history),
                      ],
                    ),
                  );
                }
              },
            ),
          ),
        ],
      ),
    );
  }
}
